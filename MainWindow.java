//package javaapplication1;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.StringTokenizer;

//import BooksListaMalli;
//import ListaMalli;
import javax.swing.AbstractListModel;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;

/**
 * 
 * @author miksa
 */
public class MainWindow {

}

/**
 * Constructs main View
 * 
 * @author miksa
 *
 */
class Naytto extends javax.swing.JFrame {
	public AddWriterWindow lisays;
	public AddBookWindow bookAdd;
	public ModifyWriter modifyWriter;
	public ModifyBook modifyBook;
	private Bookshelf kirjahylly;
	public ListaMalli listaMalli;
	public BooksListaMalli bookListaMalli;

	/**
	 * Creates new form Naytto2
	 */
	public Naytto(Bookshelf kirjahylly) {
		System.out.println("DEBUG: Naytto constructor(v08)");
		this.kirjahylly = kirjahylly;
		// writers datastructure
		this.listaMalli = new ListaMalli(kirjahylly);
		// Books datastructure
		this.bookListaMalli = new BooksListaMalli(kirjahylly);

		// this.kirjahylly = new Bookshelf("Bookshelf", "librarian",
		// "salasana");
		// Adding new writer window
		lisays = new AddWriterWindow(kirjahylly);

		// Adding new Book
		bookAdd = new AddBookWindow(kirjahylly, listaMalli);

		// Modifying writer data
		modifyWriter = new ModifyWriter(kirjahylly);
		modifyBook = new ModifyBook(kirjahylly);

		initComponents();
		// let's override init code
		jList1.setModel(listaMalli);
		jScrollPane1.setViewportView(jList1);

		jList2.setModel(bookListaMalli);
		jScrollPane2.setViewportView(jList2);
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed"
	// desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents() {
		// Menubarin rakentaminen
		JMenuBar menuBar;
		JMenu menu, subMenu;
		JMenu helpMenu;
		JMenuItem menuItem;
		JMenuItem aboutMenuItem;

		menuBar = new JMenuBar();
		menu = new JMenu("menueee");
		helpMenu = new JMenu("Help");

		menuBar.add(menu);
		menuBar.add(helpMenu);

		menuItem = new JMenuItem("teksti menu item", KeyEvent.VK_T);
		aboutMenuItem = new JMenuItem("About Bookshelf", KeyEvent.VK_A);

		aboutMenuItem.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				aboutMenuItemActionPerformed(e);
			}
		});
		menu.add(menuItem);
		helpMenu.add(aboutMenuItem);
		setJMenuBar(menuBar);

		// TODO toiminta uupuu...
		// menubar loppuu

		jButton1 = new javax.swing.JButton();
		jButton2 = new javax.swing.JButton();
		jScrollPane1 = new javax.swing.JScrollPane();
		jList1 = new javax.swing.JList();
		jScrollPane2 = new javax.swing.JScrollPane();
		jList2 = new javax.swing.JList();
		jButton3 = new javax.swing.JButton();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
		setLocation(200, 200);
		jButton1.setText("Add Writer");
		jButton1.setActionCommand("addWriterJButton");
		jButton1.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton1ActionPerformed(evt);
			}
		});

		jButton2.setText("Add Book");
		jButton2.setActionCommand("addBookJButton");
		jButton2.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton2ActionPerformed(evt);
			}
		});

		jList1.setModel(new javax.swing.AbstractListModel() {
			String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4",
					"Item 5" };

			public int getSize() {
				return strings.length;
			}

			public Object getElementAt(int i) {
				return strings[i];
			}
		});
		jList1.addMouseListener(new MouseAdapter() {
			public void mouseClicked(MouseEvent evt) {
				jList1ActionPerformed(evt);
			}
		});

		jScrollPane1.setViewportView(jList1);

		jList2.setModel(new javax.swing.AbstractListModel() {
			String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4",
					"Item 5" };

			public int getSize() {
				return strings.length;
			}

			public Object getElementAt(int i) {
				return strings[i];
			}
		});
		jList2.addMouseListener(new MouseAdapter() {
			public void mouseClicked(MouseEvent evt) {
				jList2ActionPerformed(evt);
			}
		});
		jScrollPane2.setViewportView(jList2);

		jButton3.setText("Update lists");
		jButton3.setActionCommand("UpdateJButton");
		jButton3.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton3ActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(
				getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						layout.createSequentialGroup()
								.addContainerGap()
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.LEADING)
												.addGroup(
														layout.createSequentialGroup()
																.addComponent(
																		jButton1)
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.RELATED,
																		166,
																		Short.MAX_VALUE)
																.addComponent(
																		jButton2))
												.addGroup(
														layout.createSequentialGroup()
																.addGroup(
																		layout.createParallelGroup(
																				javax.swing.GroupLayout.Alignment.LEADING)
																				.addComponent(
																						jButton3)
																				.addComponent(
																						jScrollPane1,
																						javax.swing.GroupLayout.PREFERRED_SIZE,
																						150,
																						javax.swing.GroupLayout.PREFERRED_SIZE))
																.addGap(18, 18,
																		18)
																.addComponent(
																		jScrollPane2)))
								.addContainerGap()));
		layout.setVerticalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						layout.createSequentialGroup()
								.addContainerGap()
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(jButton1)
												.addComponent(jButton2))
								.addGap(18, 18, 18)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.LEADING)
												.addGroup(
														layout.createSequentialGroup()
																.addComponent(
																		jScrollPane1,
																		javax.swing.GroupLayout.DEFAULT_SIZE,
																		190,
																		Short.MAX_VALUE)
																.addGap(18, 18,
																		18)
																.addComponent(
																		jButton3))
												.addComponent(jScrollPane2))
								.addContainerGap()));

		pack();
	}// </editor-fold>//GEN-END:initComponents
	/**
	 * 
	 * This method click update button. AddWriterWindow and AddBookWindow calls this when they finish throught the Bookshelf class.
	 * 
	 * TODO This can't be the best way to do this update-operation.
	 * 
	 * @since 10.4.2015
	 */
	public void UpdateJButtonClick() {
		System.out.println("update button automated click");
		jButton3.doClick();
	}
	private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton1ActionPerformed
		System.out.println("Debug");
		lisays.setVisible(true);
	}// GEN-LAST:event_jButton1ActionPerformed

	private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton2ActionPerformed
		System.out.println("Debug: bookAdd Window started");
		bookAdd.setVisible(true);
	}// GEN-LAST:event_jButton2ActionPerformed

	/**
	 * This happens when user press update button in main window
	 * 
	 * @param evt
	 */
	private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton3ActionPerformed
		listaMalli.updateLista();
		jList1.updateUI();
		bookListaMalli.updateLista();
		jList2.updateUI();
		System.out.println("Debug: updateJButton pressed");
	}// GEN-LAST:event_jButton3ActionPerformed

	/**
	 * ActionEvent happens if user press Help/about menuitem
	 * 
	 * @since 9.4.2015
	 * @param aevt
	 */
	private void aboutMenuItemActionPerformed(java.awt.event.ActionEvent aevt) {
		System.out.println("aboutmenuitem pressed");
		JOptionPane.showMessageDialog(this,
				"Version "+kirjahylly.VERSIONNUMBER+"\n\nSomething to ask?\nSend email to miksa007@gmail.com",
				"Miksan Kirjastosovellus", JOptionPane.PLAIN_MESSAGE);
	}

	/**
	 * Jlist click happens User can select one of the elements. Selection will
	 * open the addWriter window.
	 * 
	 * date 18.10.2012
	 * 
	 * @param evt
	 */
	private void jList1ActionPerformed(MouseEvent evt) {
		System.out.println("Debug:jList1ActionPerformed(MouseEvent evt)");
		if (evt.getClickCount() == 2) {
			System.out
					.println("Debug:jList1ActionPerformed(MouseEvent evt) two clicks");
			int index = jList1.locationToIndex(evt.getPoint());
			String data = listaMalli.getElementAt(index).toString();

			System.out.println("Debug: index = " + index + ", data = " + data);
			StringTokenizer st = new StringTokenizer(data);
			int wno = Integer.parseInt(st.nextToken());

			String writerdata = kirjahylly.getWriter(wno);
			System.out.println("Debug: WNO=" + wno + "\n" + writerdata);
			StringTokenizer st2 = new StringTokenizer(writerdata);
			String wnoString = st2.nextToken();
			wno = Integer.parseInt(wnoString);
			String fName = st2.nextToken();
			String lName = st2.nextToken();
			modifyWriter.updateVariables(wnoString, fName, lName);

		} else if (evt.getClickCount() == 3) {
			System.out
					.println("Debug:jList1ActionPerformed(MouseEvent evt) three clicks");
		}
	}

	private void jList2ActionPerformed(MouseEvent evt) {
		System.out.println("Debug:jList2ActionPerformed(MouseEvent evt)");
		if (evt.getClickCount() == 2) {
			System.out
					.println("Debug:jList2ActionPerformed(MouseEvent evt) two clicks");
			int index = jList2.locationToIndex(evt.getPoint());
			String data = bookListaMalli.getElementAt(index).toString();

			System.out.println("Debug: index = " + index + ", data = " + data);
			StringTokenizer st = new StringTokenizer(data);
			int bno = Integer.parseInt(st.nextToken());

			String bookdata = kirjahylly.getBook(bno);
			System.out.println("Debug: BNO=" + bno + "\n" + bookdata);
			StringTokenizer st2 = new StringTokenizer(bookdata, "\n");
			String bnoString = st2.nextToken();
			bno = Integer.parseInt(bnoString);
			String name = st2.nextToken();
			String oName = st2.nextToken();
			String wnoString = st2.nextToken();
			int wno = Integer.parseInt(wnoString);
			modifyBook.updateVariables(wnoString, name, oName, bnoString);

		} else if (evt.getClickCount() == 3) {
			System.out
					.println("Debug:jList1ActionPerformed(MouseEvent evt) three clicks");
		}
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton jButton1;
	private javax.swing.JButton jButton2;
	private javax.swing.JButton jButton3;
	private javax.swing.JList jList1;
	private javax.swing.JList jList2;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JScrollPane jScrollPane2;
	// End of variables declaration//GEN-END:variables
}

class ListaMalli extends AbstractListModel {
	private Bookshelf kirjahylly;
	// new javax.swing.AbstractListModel() {
	String[] strings;

	public ListaMalli(Bookshelf kirjahylly) {
		strings = kirjahylly.getWriters();
	}

	public int getSize() {
		return strings.length;
	}

	public Object getElementAt(int i) {
		return strings[i];
	}

	public void updateLista() {
		strings = kirjahylly.getWriters();

	}
}

class BooksListaMalli extends AbstractListModel {
	private Bookshelf kirjahylly;
	// new javax.swing.AbstractListModel() {
	String[] strings;

	public BooksListaMalli(Bookshelf kirjahylly) {
		strings = kirjahylly.getBooks();
	}

	public int getSize() {
		return strings.length;
	}

	public Object getElementAt(int i) {
		return strings[i];
	}

	public void updateLista() {
		strings = kirjahylly.getBooks();

	}
}